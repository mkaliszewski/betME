{"version":3,"sources":["store/actionTypes.ts","types/index.ts","store/reducer.ts","store/store.ts","store/actions.ts","components/LoadingWrapper/LoadingWrapper.tsx","components/StatusChip/StatusChip.tsx","components/RaceTable/RaceTable.tsx","components/BetSummary/BetSummary.tsx","images/background.jpg","views/Race/Race.tsx","components/RacesTable/RacesTable.tsx","views/Races/Races.tsx","styles/theme.ts","components/Layout/Header/Header.tsx","components/Layout/Layout.tsx","components/ErrorBoundary/ErrorBoundary.tsx","App.tsx","index.tsx"],"names":["ActionTypes","Places","Status","INITIAL_STATE","status","Any","races","race","undefined","activeParticipants","filtredRaces","betValue","bets","First","Second","Third","isLoading","isError","persistConfig","key","storage","persistedReducer","persistReducer","state","action","type","SET_STATUS","payload","filter","Active","active","SET_RACES","SET_RACE","SET_ACTIVE_PARTICIPANTS","SET_BET_VALUE","isInvalid","startsWith","SET_BETS","place","participantId","isUsedValue","Object","values","includes","keyToClear","keys","find","CLEAR_RACE_INFO","FETCH_START","FETCH_SUCCESS","FETCH_FAILURE","middlewares","thunk","store","createStore","applyMiddleware","persistor","persistStore","setRace","setActiveParticipants","participants","fetchStart","fetchSuccess","fetchFailure","StyledBox","styled","Box","width","height","display","justifyContent","alignItems","LoadingWrapper","children","CircularProgress","color","Typography","StatusChip","isActive","Chip","label","StyledTableRow","TableRow","cursor","backgroundColor","theme","palette","hover","border","RaceTable","handleChange","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableCell","align","TableBody","map","id","body","scope","Radio","checked","first","onChange","event","value","disabled","second","third","colors","yellow","grey","brown","StyledGrid","Grid","marginTop","spacing","marginLeft","boxShadow","borderRadius","Header","padding","primary","main","common","white","BetNameWrapper","CenteredGrid","BetSummary","isValueError","isSubmitted","handleButtonClick","useState","betNames","setBetNames","useEffect","betParticipants","forEach","bet","foundParticipant","participant","push","container","item","xs","variant","name","index","flexDirection","wordBreak","Button","onClick","size","Alert","severity","StyledContainer","Container","RaceHeader","background","backgroundImage","backgroundBlendMode","backgroundSize","backgroundPosition","RaceNameContainer","RaceView","useParams","dispatch","useDispatch","useSelector","setIsValueError","setIsSubmitted","raceId","a","Promise","all","fetch","racesResponse","participantsResponse","json","racer","handleBetChange","useCallback","parseInt","target","setBets","handleClick","some","maxWidth","TextField","setBetValue","inputProps","inputMode","pattern","helperText","RacesTable","history","useHistory","handleRowClick","length","RacesView","response","responseData","FormControl","fullWidth","InputLabel","Select","labelId","setStatus","MenuItem","Inactive","createTheme","teal","text","secondary","GlobalStyle","createGlobalStyle","position","top","paddingLeft","StyledTypography","fontWeight","letterSpacing","to","FullHeightWrapper","minHeight","margin","Layout","ErrorBoundary","props","timeout","clearTimer","clearTimeout","navigateHome","window","location","replace","timer","setTimeout","hasError","error","this","console","Component","App","ThemeProvider","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f09671d.chunk.js","sourcesContent":["export enum ActionTypes {\n  SET_STATUS = 'SET_STATUS',\n  SET_RACES = 'SET_RACES',\n  SET_RACE = 'SET_RACE',\n  SET_ACTIVE_PARTICIPANTS = 'SET_ACTIVE_PARTICIPANTS',\n  SET_BET_VALUE = 'SET_BET_VALUE',\n  SET_BETS = 'SET_BETS',\n  CLEAR_RACE_INFO = 'CLEAR_RACE_INFO',\n  FETCH_START = 'FETCH_START',\n  FETCH_SUCCESS = 'FETCH_SUCCESS',\n  FETCH_FAILURE = 'FETCH_FAILURE'\n}\n","interface Race {\n  active: boolean;\n  id: number;\n  name: string;\n  participants: number[];\n}\n\ninterface Participant {\n  id: number;\n  body: string;\n}\n\nenum Places {\n  First = 'first',\n  Second = 'second',\n  Third = 'third'\n}\n\nenum Status {\n  Any = 'Any',\n  Active = 'Active',\n  Inactive = 'Inactive'\n}\n\ntype Bets = Record<Places, number | null>;\n\nexport type { Race, Participant, Bets };\nexport { Places, Status };\n","import { persistReducer } from 'redux-persist';\nimport {} from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { ActionTypes } from './actionTypes';\nimport { Status, Race, Participant, Bets, Places } from '../types';\n\ninterface ActionA {\n  type: ActionTypes.SET_STATUS;\n  payload: Status;\n}\ninterface ActionB {\n  type: ActionTypes.SET_RACES;\n  payload: Race[];\n}\ninterface ActionC {\n  type: ActionTypes.SET_RACE;\n  payload: Race;\n}\ninterface ActionD {\n  type: ActionTypes.SET_ACTIVE_PARTICIPANTS;\n  payload: Participant[];\n}\ninterface ActionE {\n  type: ActionTypes.SET_BET_VALUE;\n  payload: string;\n}\ninterface ActionF {\n  type: ActionTypes.SET_BETS;\n  payload: {\n    place: Places;\n    participantId: number;\n  };\n}\ninterface ActionG {\n  type: ActionTypes.CLEAR_RACE_INFO;\n}\ninterface ActionH {\n  type: ActionTypes.FETCH_START;\n}\ninterface ActionI {\n  type: ActionTypes.FETCH_SUCCESS;\n}\ninterface ActionJ {\n  type: ActionTypes.FETCH_FAILURE;\n}\n\ntype Action =\n  | ActionA\n  | ActionB\n  | ActionC\n  | ActionD\n  | ActionE\n  | ActionF\n  | ActionG\n  | ActionH\n  | ActionI\n  | ActionJ;\n\nexport interface State {\n  status: Status;\n  races: Race[];\n  race: Race | undefined;\n  activeParticipants: Participant[];\n  filtredRaces: Race[];\n  betValue: string;\n  bets: Bets;\n  isLoading: boolean;\n  isError: boolean;\n}\n\ntype PlacesType = 'first' | 'second' | 'third';\n\nexport const INITIAL_STATE = {\n  status: Status.Any,\n  races: [],\n  race: undefined,\n  activeParticipants: [],\n  filtredRaces: [],\n  betValue: '0',\n  bets: { [Places.First]: null, [Places.Second]: null, [Places.Third]: null },\n  isLoading: true,\n  isError: false\n};\n\nconst reducer = (state: State = INITIAL_STATE, action: Action): State => {\n  switch (action.type) {\n    case ActionTypes.SET_STATUS:\n      return {\n        ...state,\n        status: action.payload,\n        filtredRaces: state.races.filter(race => {\n          if (action.payload === Status.Any) {\n            return race;\n          }\n          return action.payload === Status.Active ? race.active : !race.active;\n        })\n      };\n    case ActionTypes.SET_RACES:\n      return {\n        ...state,\n        races: action.payload,\n        filtredRaces: action.payload.filter(race => {\n          if (state.status === Status.Any) {\n            return race;\n          }\n          return state.status === Status.Active ? race.active : !race.active;\n        })\n      };\n    case ActionTypes.SET_RACE:\n      return {\n        ...state,\n        race: action.payload\n      };\n    case ActionTypes.SET_ACTIVE_PARTICIPANTS:\n      return {\n        ...state,\n        activeParticipants: action.payload\n      };\n    case ActionTypes.SET_BET_VALUE:\n      const isInvalid =\n        action.payload.startsWith('-') ||\n        (action.payload !== '0' && action.payload.startsWith('0'));\n      return {\n        ...state,\n        betValue: isInvalid ? state.betValue : action.payload\n      };\n    case ActionTypes.SET_BETS:\n      const {\n        payload: { place, participantId }\n      } = action;\n      const isUsedValue = Object.values(state.bets).includes(participantId);\n      if (isUsedValue) {\n        const keyToClear = (Object.keys(state.bets) as PlacesType[]).find(\n          key => state.bets[key] === participantId\n        );\n\n        return {\n          ...state,\n          bets: {\n            ...state.bets,\n            [place]: participantId,\n            [keyToClear as Places]: null\n          }\n        };\n      }\n      return {\n        ...state,\n        bets: { ...state.bets, [place]: participantId }\n      };\n\n    case ActionTypes.CLEAR_RACE_INFO:\n      return {\n        ...state,\n        race: INITIAL_STATE.race,\n        activeParticipants: INITIAL_STATE.activeParticipants,\n        betValue: INITIAL_STATE.betValue,\n        bets: INITIAL_STATE.bets\n      };\n    case ActionTypes.FETCH_START:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case ActionTypes.FETCH_SUCCESS:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case ActionTypes.FETCH_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    default:\n      return state;\n  }\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nexport const persistedReducer = persistReducer(persistConfig, reducer);\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport { persistedReducer } from './reducer';\n\nconst middlewares = [thunk];\n\nexport const store = createStore(\n  persistedReducer,\n  applyMiddleware(...middlewares)\n);\nexport const persistor = persistStore(store);\n","import { AnyAction } from 'redux';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from './actionTypes';\nimport { Status, Race, Participant, Places } from '../types';\n\nexport const setStatus = (status: Status) => ({\n  type: ActionTypes.SET_STATUS,\n  payload: status\n});\n\nexport const setRaces = (races: Race[]) => ({\n  type: ActionTypes.SET_RACES,\n  payload: races\n});\n\nexport const setRace = (race: Race | undefined) => ({\n  type: ActionTypes.SET_RACE,\n  payload: race\n});\n\nexport const setActiveParticipants = (participants: Participant[]) => ({\n  type: ActionTypes.SET_ACTIVE_PARTICIPANTS,\n  payload: participants\n});\n\nexport const setBetValue = (betValue: string) => ({\n  type: ActionTypes.SET_BET_VALUE,\n  payload: betValue\n});\n\nexport const setBets = (place: Places, participantId: number) => ({\n  type: ActionTypes.SET_BETS,\n  payload: { place, participantId }\n});\n\nexport const fetchStart = () => ({\n  type: ActionTypes.FETCH_START\n});\n\nexport const fetchSuccess = () => ({\n  type: ActionTypes.FETCH_SUCCESS\n});\n\nexport const fetchFailure = () => ({\n  type: ActionTypes.FETCH_FAILURE\n});\n\nexport const clearRaceInfo = () => ({\n  type: ActionTypes.CLEAR_RACE_INFO\n});\n\nexport const fetchRaces = (): ThunkAction<\n  Promise<void>,\n  Record<string, unknown>,\n  Record<string, unknown>,\n  AnyAction\n> => {\n  return async (\n    dispatch: ThunkDispatch<\n      Record<string, unknown>,\n      Record<string, unknown>,\n      AnyAction\n    >\n  ): Promise<void> => {\n    dispatch(fetchStart());\n\n    try {\n      const response = await fetch(\n        'https://my-json-server.typicode.com/hdjfye/bet-api/races'\n      );\n      if (response) {\n        const responseData = (await response.json()) as Race[];\n        dispatch(setRaces(responseData));\n        dispatch(fetchSuccess());\n      } else {\n        dispatch(fetchFailure());\n      }\n    } catch (e) {\n      dispatch(fetchFailure());\n    }\n  };\n};\n\nexport const fetchRaceWithParticipants = (\n  raceId: string\n): ThunkAction<\n  Promise<void>,\n  Record<string, unknown>,\n  Record<string, unknown>,\n  AnyAction\n> => {\n  return async (\n    dispatch: ThunkDispatch<\n      Record<string, unknown>,\n      Record<string, unknown>,\n      AnyAction\n    >\n  ): Promise<void> => {\n    dispatch(fetchStart());\n\n    try {\n      const [racesResponse, participantsResponse] = await Promise.all([\n        fetch(\n          `https://my-json-server.typicode.com/hdjfye/bet-api/races/${raceId}`\n        ),\n        fetch('https://my-json-server.typicode.com/hdjfye/bet-api/participants')\n      ]);\n      if (racesResponse && participantsResponse) {\n        const race = (await racesResponse.json()) as Race;\n        const participants =\n          (await participantsResponse.json()) as Participant[];\n\n        const activeParticipants: Participant[] = [];\n        race.participants.forEach(participant => {\n          participants.forEach(racer => {\n            if (racer.id === participant) {\n              activeParticipants.push(racer);\n            }\n          });\n        });\n\n        dispatch(setRace(race));\n        dispatch(setActiveParticipants(activeParticipants));\n        dispatch(fetchSuccess());\n      } else {\n        dispatch(fetchFailure());\n      }\n    } catch (e) {\n      dispatch(fetchFailure());\n    }\n  };\n};\n","import { ReactNode } from 'react';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\n\nexport interface LoadingWrapperProps {\n  isLoading: boolean;\n  isError: boolean;\n  children: ReactNode;\n}\n\nconst StyledBox = styled(Box)({\n  width: '100%',\n  height: 'calc(100vh - 160px)',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nexport const LoadingWrapper = ({\n  isLoading,\n  isError,\n  children\n}: LoadingWrapperProps) => {\n  if (isLoading) {\n    return (\n      <StyledBox data-testid=\"spinner-container\">\n        <CircularProgress color=\"primary\" />\n      </StyledBox>\n    );\n  }\n\n  if (isError) {\n    return (\n      <StyledBox>\n        <Typography>\n          Oooops... something went wrong. Try to refresh the page.\n        </Typography>\n      </StyledBox>\n    );\n  }\n\n  return <>{children}</>;\n};\n","import Chip from '@mui/material/Chip';\n\ninterface StatusChipProps {\n  isActive: boolean;\n}\n\nexport const StatusChip = ({ isActive }: StatusChipProps) =>\n  isActive ? (\n    <Chip label=\"Active\" color=\"success\" />\n  ) : (\n    <Chip label=\"Inactive\" color=\"error\" />\n  );\n","import { ChangeEvent } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\n\nimport { Race, Participant, Bets, Places } from '../../types';\n\ninterface RacesTableProps {\n  race: Race;\n  participants: Participant[];\n  bets: Bets;\n  handleChange: (event: ChangeEvent<HTMLInputElement>, place: Places) => void;\n}\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:hover': {\n    cursor: 'pointer',\n    backgroundColor: theme.palette.action.hover\n  },\n\n  '&:last-child td, &:last-child th': {\n    border: 0\n  }\n}));\n\nexport const RaceTable = ({\n  race,\n  participants,\n  bets,\n  handleChange\n}: RacesTableProps) => {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 400 }} aria-label=\"Race table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Participant name</TableCell>\n            <TableCell align=\"center\">Winner</TableCell>\n            <TableCell align=\"center\">2nd place</TableCell>\n            <TableCell align=\"center\">3rd place</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {participants.map(({ id, body }) => (\n            <StyledTableRow key={id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {body}\n              </TableCell>\n              <TableCell align=\"center\">\n                <Radio\n                  checked={bets.first === id}\n                  onChange={event => handleChange(event, Places.First)}\n                  value={id}\n                  disabled={!race.active}\n                />\n              </TableCell>\n              <TableCell align=\"center\">\n                <Radio\n                  checked={bets.second === id}\n                  onChange={event => handleChange(event, Places.Second)}\n                  value={id}\n                  disabled={!race.active}\n                />\n              </TableCell>\n              <TableCell align=\"center\">\n                <Radio\n                  checked={bets.third === id}\n                  onChange={event => handleChange(event, Places.Third)}\n                  value={id}\n                  disabled={!race.active}\n                />\n              </TableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\nimport Typography from '@mui/material/Typography';\nimport { yellow, grey, brown } from '@mui/material/colors';\n\nimport { styled } from '@mui/material/styles';\n\nimport type { Bets, Participant } from '../../types';\n\ninterface BetSummaryProps {\n  betValue: string;\n  bets: Bets;\n  participants: Participant[];\n  isActive: boolean;\n  isValueError: boolean;\n  isSubmitted: boolean;\n  handleButtonClick: () => void;\n}\n\ntype BetsNames = (string | undefined)[];\n\nconst colors = [yellow[300], grey[300], brown[300]];\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n  width: '100%',\n  marginTop: theme.spacing(7),\n  marginLeft: theme.spacing(2),\n  boxShadow: `0px 0px 18px 0px ${grey[300]}`,\n  borderRadius: theme.spacing(1)\n}));\n\nconst Header = styled(Grid)(({ theme }) => ({\n  width: '100%',\n  height: 'fit-content',\n  padding: theme.spacing(2),\n  borderRadius: `${theme.spacing(1)} ${theme.spacing(1)} 0 0`,\n  display: 'flex',\n  justifyContent: 'center',\n  backgroundColor: theme.palette.primary.main,\n  color: theme.palette.common.white\n}));\n\nconst BetNameWrapper = styled(Grid)({\n  height: 60,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nconst CenteredGrid = styled(Grid)({\n  height: 90,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nexport const BetSummary = ({\n  betValue,\n  bets,\n  participants,\n  isActive,\n  isValueError,\n  isSubmitted,\n  handleButtonClick\n}: BetSummaryProps) => {\n  const [betNames, setBetNames] = useState<BetsNames>([]);\n\n  useEffect(() => {\n    const betParticipants: BetsNames = [];\n    const betsIds = Object.values(bets);\n    betsIds.forEach(bet => {\n      const foundParticipant = participants.find(\n        participant => participant.id === bet\n      );\n      betParticipants.push(foundParticipant?.body);\n    });\n\n    setBetNames(betParticipants);\n  }, [bets, participants]);\n  return (\n    <StyledGrid container>\n      <Header item xs={12} justifyContent=\"center\">\n        <Typography variant=\"h4\">Your bet</Typography>\n      </Header>\n      {betNames.map((name, index) => (\n        <BetNameWrapper\n          item\n          xs={12}\n          sx={{\n            backgroundColor: colors[index]\n          }}\n        >\n          <Typography>{name ?? 'None'}</Typography>\n        </BetNameWrapper>\n      ))}\n\n      <CenteredGrid item xs={4} sx={{ flexDirection: 'column' }}>\n        <Typography align=\"center\">Your bet:</Typography>\n        <Typography variant=\"h5\" align=\"center\" sx={{ wordBreak: 'break-all' }}>\n          ${betValue}\n        </Typography>\n      </CenteredGrid>\n      <CenteredGrid item xs={8}>\n        <Button\n          onClick={handleButtonClick}\n          variant=\"contained\"\n          size=\"large\"\n          disabled={!isActive}\n        >\n          Place your bet!\n        </Button>\n      </CenteredGrid>\n      <Grid xs={12}>\n        {isSubmitted && !isValueError && (\n          <Alert severity=\"success\">Your bet has been set</Alert>\n        )}\n        {isValueError && (\n          <Alert severity=\"error\">\n            To set bet place amount and select winner, 2nd place and 3rd place\n          </Alert>\n        )}\n        {!isActive && (\n          <Alert severity=\"error\">\n            Sorry, you can't place bet when race is inactive.\n          </Alert>\n        )}\n      </Grid>\n    </StyledGrid>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/background.4ce76570.jpg\";","import { useState, useEffect, useCallback, ChangeEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\n\nimport { LoadingWrapper } from '../../components/LoadingWrapper';\nimport { StatusChip } from '../../components/StatusChip';\nimport { RaceTable } from '../../components/RaceTable';\nimport { BetSummary } from '../../components/BetSummary';\nimport { Places } from '../../types';\nimport {\n  State,\n  fetchRaceWithParticipants,\n  setBetValue,\n  setBets,\n  clearRaceInfo\n} from '../../store';\nimport backgroundImage from '../../images/background.jpg';\n\nconst headerHeight = 200;\n\nconst StyledContainer = styled(Container)(({ theme }) => ({\n  height: `calc(100% - ${headerHeight}px)`,\n  padding: `${theme.spacing(4)} 0`\n}));\n\nconst RaceHeader = styled(Box)({\n  width: '100%',\n  height: headerHeight,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  background: `rgba(0, 0, 0, 0.2) url(${backgroundImage})`,\n  backgroundBlendMode: 'darken',\n  backgroundSize: 'cover',\n  backgroundPosition: '50% 20%'\n});\n\nconst RaceNameContainer = styled(Box)(({ theme }) => ({\n  width: 600,\n  height: 120,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  alignItems: 'center',\n  backgroundColor: 'rgba(0,0,0, 0.85)',\n  color: theme.palette.common.white,\n  borderRadius: theme.spacing(1)\n}));\n\nexport const RaceView = () => {\n  const { id }: { id: string } = useParams();\n  const dispatch = useDispatch();\n  const { race, activeParticipants, betValue, bets, isLoading, isError } =\n    useSelector((state: State) => ({\n      race: state.race,\n      activeParticipants: state.activeParticipants,\n      betValue: state.betValue,\n      bets: state.bets,\n      isLoading: state.isLoading,\n      isError: state.isError\n    }));\n\n  const [isValueError, setIsValueError] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchRaceWithParticipants(id));\n\n    return () => {\n      dispatch(clearRaceInfo());\n    };\n  }, [dispatch, id]);\n\n  const handleBetValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsValueError(false);\n    dispatch(setBetValue(event.target.value));\n  };\n\n  const handleBetChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>, place: Places) => {\n      setIsValueError(false);\n      const participantId = parseInt(event.target.value);\n      dispatch(setBets(place, participantId));\n    },\n\n    [dispatch]\n  );\n\n  const handleClick = useCallback(() => {\n    if (Object.values(bets).some(bet => bet === null) || !parseInt(betValue)) {\n      return setIsValueError(true);\n    }\n    setIsSubmitted(true);\n  }, [betValue, bets]);\n\n  return (\n    <LoadingWrapper isLoading={isLoading} isError={isError}>\n      {race && activeParticipants && (\n        <>\n          <RaceHeader>\n            <RaceNameContainer>\n              <Typography variant=\"h4\">{race.name}</Typography>\n              <StatusChip isActive={race.active} />\n            </RaceNameContainer>\n          </RaceHeader>\n          <StyledContainer maxWidth=\"lg\">\n            <Grid container>\n              <Grid item xs={9}>\n                <TextField\n                  id=\"bet\"\n                  label=\"Bet amount ($)\"\n                  value={betValue}\n                  type=\"number\"\n                  onChange={handleBetValueChange}\n                  inputProps={{\n                    inputMode: 'numeric',\n                    pattern: '^[1-9][0-9]*$'\n                  }}\n                  disabled={!race?.active}\n                  helperText={\n                    !race?.active &&\n                    'Race is not active. You cannot place a bet.'\n                  }\n                />\n                <RaceTable\n                  race={race}\n                  participants={activeParticipants}\n                  bets={bets}\n                  handleChange={handleBetChange}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <BetSummary\n                  betValue={betValue}\n                  bets={bets}\n                  participants={activeParticipants}\n                  isActive={race.active}\n                  isValueError={isValueError}\n                  isSubmitted={isSubmitted}\n                  handleButtonClick={handleClick}\n                />\n              </Grid>\n            </Grid>\n          </StyledContainer>\n        </>\n      )}\n    </LoadingWrapper>\n  );\n};\n","import { useHistory } from 'react-router-dom';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { styled } from '@mui/material/styles';\n\nimport { StatusChip } from '../StatusChip';\nimport type { Race } from '../../types';\n\ninterface RacesTableProps {\n  races: Race[];\n}\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:hover': {\n    cursor: 'pointer',\n    backgroundColor: theme.palette.action.hover\n  },\n\n  '&:last-child td, &:last-child th': {\n    border: 0\n  }\n}));\n\nexport const RacesTable = ({ races }: RacesTableProps) => {\n  const history = useHistory();\n  const handleRowClick = (id: number) => {\n    history.push(`/race/${id}`);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 400 }} aria-label=\"Races table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Race name</TableCell>\n            <TableCell align=\"center\">Numer of participants</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {races.map(({ id, name, participants, active }) => (\n            <StyledTableRow key={id} onClick={() => handleRowClick(id)}>\n              <TableCell component=\"th\" scope=\"row\">\n                {name}\n              </TableCell>\n              <TableCell align=\"center\">{participants.length}</TableCell>\n              <TableCell align=\"center\">\n                <StatusChip isActive={active} />\n              </TableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '@mui/material/Container';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { styled } from '@mui/material/styles';\n\nimport { LoadingWrapper } from '../../components/LoadingWrapper';\nimport { RacesTable } from '../../components/RacesTable';\nimport { Status } from '../../types';\nimport { fetchRaces, setStatus } from '../../store';\nimport type { State } from '../../store';\n\nconst StyledContainer = styled(Container)(({ theme }) => ({\n  height: '100%',\n  padding: `${theme.spacing(4)} 0`\n}));\n\nexport const RacesView = () => {\n  const dispatch = useDispatch();\n  const { status, filtredRaces, isLoading, isError } = useSelector(\n    (state: State) => ({\n      status: state.status,\n      filtredRaces: state.filtredRaces,\n      isLoading: state.isLoading,\n      isError: state.isError\n    })\n  );\n\n  useEffect(() => {\n    dispatch(fetchRaces());\n  }, [dispatch]);\n\n  const handleStatusChange = (event: SelectChangeEvent) => {\n    dispatch(setStatus(event.target.value as Status));\n  };\n\n  return (\n    <LoadingWrapper isLoading={isLoading} isError={isError}>\n      <StyledContainer maxWidth=\"lg\">\n        <FormControl fullWidth>\n          <InputLabel id=\"status\">Race status</InputLabel>\n          <Select\n            labelId=\"status\"\n            id=\"status\"\n            value={status}\n            label=\"Race status\"\n            onChange={handleStatusChange}\n          >\n            <MenuItem value={Status.Active}>{Status.Active}</MenuItem>\n            <MenuItem value={Status.Inactive}>{Status.Inactive}</MenuItem>\n            <MenuItem value={Status.Any}>{Status.Any}</MenuItem>\n          </Select>\n        </FormControl>\n        <RacesTable races={filtredRaces} />\n      </StyledContainer>\n    </LoadingWrapper>\n  );\n};\n","import { createTheme } from '@mui/material/styles';\nimport { teal } from '@mui/material/colors';\n\nimport { createGlobalStyle } from 'styled-components';\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: teal[500]\n    },\n    text: {\n      secondary: teal[500]\n    }\n  }\n});\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\nbody {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n    font-weight: 400;\n    overflow-x: hidden;\n    margin: inherit;\n    padding: inherit;\n}\n*, *:before, *:after {\n  box-sizing: border-box;;\n}\np, a, ul, ol {\n  font-size: 16px;\n}\na {\n  text-decoration: none;\n  :hover {\n    text-decoration: none;\n  }\n}\n`;\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  top: 0,\n  width: '100%',\n  height: 100,\n  paddingLeft: theme.spacing(2),\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  backgroundColor: theme.palette.primary.main\n}));\n\nconst StyledTypography = styled(Typography)(({ theme }) => ({\n  color: theme.palette.common.white,\n  fontWeight: 500,\n  letterSpacing: 2\n}));\n\nexport const Header = () => {\n  return (\n    <StyledBox>\n      <Link to=\"/\">\n        <StyledTypography variant=\"h2\">betME</StyledTypography>\n      </Link>\n    </StyledBox>\n  );\n};\n","import Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { ReactNode } from 'react';\nimport { Header } from './Header';\n\nconst FullHeightWrapper = styled(Box)({\n  minHeight: 'calc(100vh - 100px);',\n  margin: '100px 0 40px 0'\n});\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport const Layout = ({ children }: LayoutProps) => {\n  return (\n    <FullHeightWrapper>\n      <Header />\n      {children}\n    </FullHeightWrapper>\n  );\n};\n","import { Component, ReactNode } from 'react';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\ntype State = {\n  hasError: boolean;\n};\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport class ErrorBoundary extends Component<Props, State> {\n  static getDerivedStateFromError(): State {\n    return { hasError: true };\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.timeout = null;\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error: Error): void {\n    const { hasError } = this.state;\n    if (hasError) {\n      this.timer();\n    }\n    console.error(error);\n  }\n\n  componentWillUnmount(): void {\n    this.clearTimer();\n  }\n\n  timeout: ReturnType<typeof setTimeout> | null;\n\n  clearTimer = (): void => {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n  };\n\n  navigateHome = (): void => window.location.replace('/');\n\n  timer = (): ReturnType<typeof setTimeout> => {\n    this.clearTimer();\n\n    return (this.timeout = setTimeout(() => {\n      this.navigateHome();\n    }, 6000));\n  };\n\n  render(): ReactNode {\n    const { hasError } = this.state;\n    const { children } = this.props;\n\n    const handleReturn = (): void => {\n      this.clearTimer();\n      this.navigateHome();\n    };\n\n    return hasError ? (\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <Typography variant=\"h2\" align=\"center\">\n          Oooops... something went not as expected. You'll be redirected to\n          homepage shortly.\n        </Typography>\n        <Button onClick={handleReturn}>Go to homepage</Button>\n      </Box>\n    ) : (\n      children\n    );\n  }\n}\n","import { Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material/styles';\n\nimport { RacesView, RaceView } from './views';\nimport { theme, GlobalStyle } from './styles/theme';\nimport { Layout } from './components/Layout';\nimport { ErrorBoundary } from './components/ErrorBoundary';\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Layout>\n        <ErrorBoundary>\n          <Switch>\n            <Route path=\"/\" exact>\n              <RacesView />\n            </Route>\n            <Route path=\"/race/:id\">\n              <RaceView />\n            </Route>\n          </Switch>\n        </ErrorBoundary>\n      </Layout>\n    </ThemeProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}